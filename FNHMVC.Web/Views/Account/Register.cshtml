@model FNHMVC.Web.ViewModels.UserFormModel

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/shared/_LayoutPrincipal.cshtml";
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

      <style type="text/css">
      .auth-form {
        width: 400px;
        margin: 40px auto;
        }
      .auth-form-header {
        position: relative;
        padding: 10px 20px;
        margin: 0;
        color: #fff;
        text-shadow: 0 -1px 0 rgba(0,0,0,0.5);
        background-color: #6c8393;
        background-image: -moz-linear-gradient(#7f95a5, #6c8393);
        background-image: -webkit-linear-gradient(#7f95a5, #6c8393);
        background-image: linear-gradient(#7f95a5, #6c8393);
        background-repeat: repeat-x;
        border: 1px solid #6e8290;
        border-bottom-color: #586873;
        border-radius: 4px 4px 0 0;
        }
      .auth-form-body {
        padding: 20px;
        -moz-box-sizing: border-box;
        box-sizing: border-box;
        font-size: 14px;
        background-color: #fff;
        border: 1px solid #d8dee2;
        border-top-color: white;
        border-radius: 0 0 4px 4px;
        }

    </style>  

<div class="auth-form">
    @using (Html.BeginForm((string)ViewBag.FormAction, "Account")){
        //@Html.ValidationSummary(true, "Account creation was unsuccessful. Please correct the errors and try again.")

        <div class="auth-form-header">
            <strong>Sign Up</strong>
        </div>
        <div class="auth-form-body">
            <div class="control-group">
                <div class="controls">
                    @Html.TextBoxFor(m => m.Email, new {@class = "input-block-level", @placeholder = "Email"})
                    @Html.ValidationMessageFor(m => m.Email, null, new { @class = "help-inline" })
                </div>
            </div>
            
            <div class="control-group">
                <div class="controls">
                    @Html.TextBoxFor(m => m.FirstName, new {@class = "input-block-level", @placeholder = "First Name"})
                    @Html.ValidationMessageFor(m => m.FirstName, null, new { @class = "help-inline" })
                </div>
            </div>

            <div class="control-group">
                <div class="controls">
                    @Html.TextBoxFor(m => m.LastName, new {@class = "input-block-level", @placeholder = "Last Name"})
                    @Html.ValidationMessageFor(m => m.LastName, null, new { @class = "help-inline" })
                </div>
            </div>

            <div class="control-group">
                <div class="controls">
                    @Html.TextBoxFor(m => m.Age, new {@class = "input-block-level", @placeholder = "Age"})
                    @Html.ValidationMessageFor(m => m.Age, null, new { @class = "help-inline" })
                </div>
            </div>

            <div class="control-group">
                <div class="controls inline">
                @Html.RadioButtonFor(m => m.Genre,true,new { id = "male" })
                @Html.Label("male", "Male")
                @Html.RadioButtonFor(m => m.Genre,false, new { id = "female" })
                @Html.Label("female", "Female")
                    </div>
            </div>
            
            <div class="control-group">
                <div class="controls">
                    @Html.TextBoxFor(m => m.Country, new {@class = "input-block-level", @placeholder = "Country"})
                    @Html.ValidationMessageFor(m => m.Country, null, new { @class = "help-inline" })
                </div>
            </div>
            
            <div class="control-group">
            <div class="controls">
                @Html.TextBoxFor(m => m.PaypalAccount, new {@class = "input-block-level", @placeholder = "Paypal Account"})
                @Html.ValidationMessageFor(m => m.PaypalAccount, null, new { @class = "help-inline" })
            </div>
        </div>

            <div class="control-group">
            <div class="controls">        
                @Html.PasswordFor(m => m.Password, new {@class = "input-block-level", @placeholder = "Password"})
                @Html.ValidationMessageFor(m => m.Password, null, new { @class = "help-inline" })
            </div>
        </div>

            <div class="control-group">
                <div class="controls">
                    @Html.PasswordFor(m => m.ConfirmPassword, new {@class = "input-block-level", @placeholder = "Confirm Password"})
                    @Html.ValidationMessageFor(m => m.ConfirmPassword, null, new { @class = "help-inline" })
                </div>
            </div>

            <button class="btn btn-large btn-primary" type="submit">Sign Up</button>
        </div>
    }
</div>